version: '3.8'

services:
  # Example service that can use the S3 bucket
  app:
    image: amazon/aws-cli:latest
    container_name: terraform-s3-app
    environment:
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-us-east-1}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    volumes:
      - ./data:/app/data
    command: >
      sh -c "
        echo 'Testing S3 bucket access...' &&
        aws s3 ls s3://${S3_BUCKET_NAME:-your-bucket-name} &&
        echo 'S3 bucket access successful!' &&
        tail -f /dev/null
      "
    depends_on:
      - s3-setup

  # Service to set up S3 bucket (runs once)
  s3-setup:
    image: amazon/aws-cli:latest
    container_name: terraform-s3-setup
    environment:
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-us-east-1}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    command: >
      sh -c "
        echo 'Setting up S3 bucket...' &&
        aws s3 mb s3://${S3_BUCKET_NAME:-your-bucket-name} || echo 'Bucket may already exist' &&
        echo 'S3 bucket setup complete!'
      "
    restart: "no"

  # Optional: Local development database
  postgres:
    image: postgres:15-alpine
    container_name: terraform-s3-postgres
    environment:
      - POSTGRES_DB=appdb
      - POSTGRES_USER=appuser
      - POSTGRES_PASSWORD=apppass
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    ports:
      - "5432:5432"
    restart: unless-stopped

volumes:
  postgres_data:
